#+OPTIONS: toc:nil
#+BEGIN_HTML
---
layout: post
title: org-modeで書いた小説をmagitでGitHubに投稿する
---
#+END_HTML

* このページで紹介すること

  emacsのorg-modeで書いた小説などの文章を，GitHubに投稿して読めるようにする方法を紹介します。GitHubにはブラウザでファイルをアップロードすればpushできるという便利な機能があります。ただし今回は執筆→投稿まで全てemacsで行いたいので，バージョン管理はmagitで行います。

* このページで紹介しないこと

  magitを使ったブランチとマージの方法については紹介しません。そのため小説を書いていてありがちな「行き詰まったから前の版に戻したいけど今のルートも保険で残しておきたい。Gitを使えば手軽にできるらしいがどうすればいいんだ？」という要望を叶える方法はここには書いてありませんのでご了承ください。

* magitのインストールおよび設定

  GitHubのアカウントを既に持っているものとします (ない方は作ってください)。emacsでmagitをインストール (M-x package-install magit) したらinit.elに以下の行を追加します。

#+BEGIN_EXAMPLE
;; magit
(require 'magit)

;; org-markdown
(eval-after-load "org"
  '(require 'ox-md nil t))
#+END_EXAMPLE

* GitHubでリポジトリ作成
  GitHubでリポジトリを作成します。
  #+ATTR_HTML: width="300px"
  [[file:01.png]]

  <br>
  リポジトリができました。
  #+ATTR_HTML: width="350px"
  [[file:02.png]]

* org-modeで書いたファイルをmarkdown形式にする
  文章を書いた.orgファイルそのものはブラウザで読みやすい形にはしてくれないので，markdown形式に出力します。

#+BEGIN_EXAMPLE
C-c C-e m m
#+END_EXAMPLE

フォルダ名はGitHubで作成したリポジトリ名と同じものにしてください。今回はShortShortというフォルダにREADME.org (目次)，その中のarticleというフォルダにWhaleDreams.orgというファイル (小説の本文) と，それぞれmarkdown形式で出力したものを置いています。

* magitでコミットする
  README.mdがある場所でmagitを起動します。

#+BEGIN_EXAMPLE
M-x magit-status
#+END_EXAMPLE

<br>
実行すると下のようになります。
  #+ATTR_HTML: width="300px"
  [[file:03.png]]

  Enterを押すとgitリポジトリを作成するか聞かれるので，yを押すとフォルダ内に.gitフォルダが作成されます。

  <br>
  次にmagit-statusを起動すると下のようになります。
  #+ATTR_HTML: width="300px"
  [[file:04.png]]

  <br>
  ここでsを押すと，"Unstaged" が "Staged" に変わります。コミットの準備完了の合図です。
  #+ATTR_HTML: width="300px"
  [[file:05.png]]

  <br>
  cを2回押すと下のような画面になるので，コメントを書きます。
  #+ATTR_HTML: width="300px"
  [[file:06.png]]
  
  <br>
  コメントを書き終わってC-c C-cするとコミットが完了します。
  #+ATTR_HTML: width="300px"
  [[file:07.png]]

* GitHubにプッシュする

  Shift-M aを押すと下のように入力を促されるので，originと入力します。
  #+ATTR_HTML: width="300px"
  [[file:08.png]]

  <br>
  Remote先をきかれるので，GitHubの該当するリポジトリURLを入力します (今回はShortShortのあるURL)。
  #+ATTR_HTML: width="300px"
  [[file:09.png]]

  <br>
  Set 'remote.pushDefault' to "origin"? ときかれるのでyを押します。すると下のようになります。
  #+ATTR_HTML: width="300px"
  [[file:10.png]]

  <br>
  Shift-P を押すと下のようになるので，uを押したあとEnterを押します。
  #+ATTR_HTML: width="300px"
  [[file:11.png]]

  <br>
  ユーザー名とパスワードを入力し，下のようになればプッシュ完了です。
  #+ATTR_HTML: width="300px"
  [[file:12.png]]

  <br>
  ブラウザで見ると，空っぽのときと比べてファイルが追加されているのがわかります。
  #+ATTR_HTML: width="300px"
  [[file:13.png]]

* 以降の流れ
  - 文章を書いたらmagit-statusを起動
  - Unstaged Filesをsを押してStagedにする
  - c cでコメントを書いてC-c C-cでコミット
  - Shift-P uでユーザー名とパスワードを入力してGitHubにプッシュする
    + sshで簡略化する方法もありますが，その場合はWindows環境でのプッシュのために追加の設定が必要になるので採用していません
